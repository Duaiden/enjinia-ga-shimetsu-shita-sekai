/*
  PAIZA病院のシステムを解析します。 
  不正アクセスを試みるクラッカーからユーザーを守るために、ユーザーが設定するパスワードが十分に複雑であるようにしなくてはなりません。 
  PAIZA病院は、パスワードの複雑さの条件として以下の 3 つを定めました。

  ・長さが 6 以上 
  ・英字と数字の両方を含む必要がある 
  ・同じ文字を 3 つ以上連続で使用することはできない

  なお、英字の大文字と小文字は区別する必要はありません。 
  パスワードの候補が入力として与えられるので、複雑さの条件をすべて満たす場合は "Valid"、そうでない場合は "Invalid" と出力してください。

  例えば、入力例 1 で与えられる 7Caaad9 は 1 つ目の条件と 2 つ目の条件を満たしますが、aaa と 3 つ以上同じ文字が連続で使用されているため、複雑さの条件をすべて満たしません。
*/
#include <stdio.h>

int has_num_char(char* str, int len){
    int hasNum = 0, hasChar = 0;
    for (int i = 0; i < len; i++) {
        if('0' <= str[i] && str[i] <= '9'){
            hasNum = 1;
        }
        else if (('A' <= str[i] && str[i] <= 'Z') || ('a' <= str[i] && str[i] <= 'z')){
            hasChar = 1;
        }
    }
    if(hasNum == 1 && hasChar == 1){
        return 1;
    }
    else return 0;
}

int no_three_consecutive(char* str, int len){
    int cnt = 1;
    char temp;
    
    if('A' <= str[0] && str[0] <= 'Z'){
        char temp = str[0]-32;
    }
    else{
        char temp = str[0];
    }

    for (int i = 1; i <= len; i++) {
        if(('A' <= str[i] && str[i] <= 'Z')){
            if(str[i]-32 == temp){
                cnt ++;
            }
            else{
                cnt = 1;
            }
        }
        else {
            if(str[i] == temp){
                cnt ++;
            }
            else{
                cnt = 1;
            }
        }
        temp = str[i];
        if(cnt >= 3){
            return 0;
        }
    }
    return 1;
}

int pswd_length(char* str, int size){
    int cnt = 0;
    for (int i = 0; i < size; i++) {
        if(str[i] != 0){
            cnt ++;
        }
    }
    return cnt-1;
}

int main(void){

    char str[30];
    for (int i = 0; i < sizeof(str); i++) {
        str[i] = 0;
    }
    fgets(str, sizeof(str), stdin);
    int plength = pswd_length(str, sizeof(str));
    if(plength >= 6 && no_three_consecutive(str, plength) && has_num_char(str, plength)){
        printf("Valid");
    }
    else {
        printf("Invalid");
    }
}
